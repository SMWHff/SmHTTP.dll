变量 SmHTTP, G_IsInit


//初始化（），初始化命令库，使用前必须调用该命令。
功能 初始化()
    如果(G_IsInit == null)
        调试输出("╔══════════════════════════╗")
        调试输出("║              神梦HTTP请求模块v1.0 版本             ║")
        调试输出("╠══════════════════════════╣")
        调试输出("║    更新时间：2020-10-17 00:00:00                   ║")
        调试输出("║    神梦论坛：http://SMWHff.com                     ║")
        调试输出("║    模块作者：神梦无痕                              ║")
        调试输出("║    作者ＱＱ：1042207232                            ║")
        调试输出("║    交流①群：624655641                             ║")
        调试输出("╠══════════════════════════╣")
        调试输出("║ 模块说明：用于HTTP协议的请求访问操作               ║")
        调试输出("╠══════════════════════════╣")
        调试输出("║ 神梦工具：http://pan.baidu.com/s/1dESHf8X          ║")
        调试输出("╚══════════════════════════╝")
    结束
    G_IsInit = true
    返回 G_IsInit
结束


//=========================【兼容函数】=========================
功能 Tips(提示)
    运行状态 = 提示
    设置托盘气泡(字符串截取左侧(提示, 255))
结束

功能 MsgBox(内容, 标题 = "")
    消息框(内容, 标题)
结束

功能 Delay(毫秒)
    等待(毫秒)
结束

功能 UBound(数组变量)
    返回 数组大小(数组变量) - 1
结束

功能 InStr(源字符串, 要查找的字符串, 位置 = 0)
    变量 索引 = 字符串查找(源字符串, 要查找的字符串, 位置)
    如果(索引 == -1)
        返回 0
    否则
        返回 索引 + 1
    结束
结束

功能 Mid(字符串, 指定位置, 长度)
    返回 字符串截取(字符串, 指定位置 - 1, 指定位置 - 1 + 长度)
结束

功能 Left(字符串, 长度)
    返回 字符串截取左侧(字符串, 长度)
结束

功能 Right(字符串, 长度)
    返回 字符串截取右侧(字符串, 长度)
结束

功能 Now()
    返回 当前时间()
结束

功能 ExitScript()
    退出()
结束

功能 Asc(字符)
    返回 字符串返回字符(字符, 0)
结束

功能 Chr(ASCII码)
    返回 字符串格式化("%c", ASCII码)
结束

功能 Hex(数值)
    返回 浮点型转十六进制(数值)
结束

功能 JSONToArray(JSON字符串)
    返回 json转数组(JSON字符串, 1)
结束

功能 ArrayToJSON(数组变量)
    变量 JSON
    选择(获取变量类型(数组变量))
        条件 "null"
        JSON = JSON & "null"
        条件 "bool"
        如果(数组变量)
            JSON = JSON & "true"
        否则
            JSON = JSON & "true"
        结束
        条件 "long"
        JSON = JSON & 数组变量
        条件 "string"
        变量 文本长度, 字符码
        JSON = JSON & "\""
        文本长度 = 字符串长度(数组变量)
        遍历(变量 i = 0; i < 文本长度; i++)
            字符码 = 字符串返回字符(数组变量, i)
            选择(字符码)
                条件 34
                JSON = JSON & "\""
                条件 92
                JSON = JSON & "\\"
                条件 47
                JSON = JSON & "/"
                条件 8
                JSON = JSON & "\\b"
                条件 9
                JSON = JSON & "\\t"
                条件 12
                JSON = JSON & "\\f"
                条件 13
                JSON = JSON & "\\r"
                条件 10
                JSON = JSON & "\\n"
                默认
                如果(字符码 >= 0 && 字符码 <= 31)                    
                    JSON = JSON & "\\u00" & 字符串截取右侧("0" & 浮点型转十六进制(字符码), 2)
                否则
                    JSON = JSON & 字符串格式化("%c", 字符码)
                结束
            结束
        结束
        JSON = JSON & "\""
        条件 "array"
        变量 数组长度, 开始字符, 键字符, 结束字符, 开关
        开始字符 = "["
        键字符 = ""
        结束字符 = "]"
        数组长度 = 数组大小(数组变量)
        如果(数组长度 > 0)
            如果(转字符型(数组变量[0]) == "")
                开始字符 = "{"
                键字符 = ":"
                结束字符 = "}"
            结束
        结束
        开关 = true
        JSON = JSON & 开始字符
        遍历(变量 j = 0; j < 数组长度; j++)
            变量 值, 键
            数组获取元素(数组变量, j, 值, 键)
            如果(开关)
                开关 = false
            否则
                JSON = JSON & ","
            结束
            如果(键字符 != "")
                键字符 = "\"" & 键 & "\"" & ":"
            结束
            JSON = JSON & 键字符 & ArrayToJSON(值)
        结束
        JSON = JSON & 结束字符
        条件 "com"
        JSON = JSON & "[object Object]"
        默认
        JSON = JSON & "\"" & 转字符型(数组变量) & "\""
    结束
    返回 JSON
结束
